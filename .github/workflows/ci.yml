name: ci

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json' # .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Test
        id: npm-ci-test
        run: npm run ci-test

  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: |
          npm ci
          npm run all
  integration-test-dev:
    runs-on: ${{ matrix.os.imageName }}
    strategy:
      matrix:
        os:
          # - imageName: "ubuntu-18.04"
          - imageName: 'ubuntu-latest'
          - imageName: 'macOS-latest'
          # - imageName: "windows-2019"
          - imageName: 'windows-latest'
    steps:
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/checkout@v5
      - name: Test Local Action
        uses: ./
        id: test-action
        # with:
        #     github_token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          cargo make --version
          makers --version

  integration-test-v1:
    runs-on: ${{ matrix.os.imageName }}
    strategy:
      matrix:
        os:
          # - imageName: "ubuntu-18.04"
          - imageName: 'ubuntu-latest'
          - imageName: 'macOS-latest'
          # - imageName: "windows-2019"
          - imageName: 'windows-latest'
    steps:
      - uses: dtolnay/rust-toolchain@stable
      - uses: davidB/rust-cargo-make@v1
        # with:
        #   github_token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          cargo make --version
          makers --version
