name: 'build-test'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

permissions:
  contents: read

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          npm ci
          npm run all
  integration-test-dev:
    runs-on: ${{ matrix.os.imageName }}
    strategy:
      matrix:
        rust_toolchain: ['stable']
        os:
          # - imageName: "ubuntu-18.04"
          - imageName: 'ubuntu-latest'
          - imageName: 'macOS-latest'
          # - imageName: "windows-2019"
          - imageName: 'windows-latest'
    steps:
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: ${{ matrix.rust_toolchain }}
          override: true
      - uses: actions/checkout@v4
      - name: Test Local Action
        uses: ./
        # with:
        #   github_token: ${{ secrets.GITHUB_TOKEN }}
        id: test-action
        with:
          milliseconds: 2000
      - run: cargo make --version
      - name: Print Output
        id: output
        run: echo "${{ steps.test-action.outputs.time }}"

  integration-test-v1:
    runs-on: ${{ matrix.os.imageName }}
    strategy:
      matrix:
        rust_toolchain: ['stable']
        os:
          # - imageName: "ubuntu-18.04"
          - imageName: 'ubuntu-latest'
          - imageName: 'macOS-latest'
          # - imageName: "windows-2019"
          - imageName: 'windows-latest'
    steps:
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: ${{ matrix.rust_toolchain }}
          override: true
      - uses: davidB/rust-cargo-make@v1.10.1
        # with:
        #   github_token: ${{ secrets.GITHUB_TOKEN }}
      - run: cargo make --version
